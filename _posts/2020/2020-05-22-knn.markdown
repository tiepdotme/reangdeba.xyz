---
layout: post
title: "Understanding K-Nearest-Neighbours from scratch using Python and NumPy"
description: "I'll introduce a simple ML algorithm, commonly used as a baseline, cover the intuition, math, and caveats behind it, and explore a real-life example from scratch using only Python and NumPy."
subtitle: "Let's find them Neighbours!"
author: Debashish Reang
thumbnail: "/assets/images/Silver_Plate_Logo.png"
draft: true
tags: [knn, ml, algorithms, python, numpy]
---
**Code**. For the full code that appears on this page, [visit my GitHub repository](https://github.com/reangdeba/blog-code/tree/master/knn).

### Table of Contents
* [What is KNN?](#definition)
* [Where do we use KNN?]
* [Some math]
* [The deal with K]
* [Fun with code]
* [Improving performance]
* [Pros and cons of KNN]
* [Summary]

$$d(x, x') = \sqrt{\left(x_1 - x'_1 \right)^2 + \dotsc + \left(x_n - x'_n \right)^2}$$

$$P(y = j | X = x) = \frac{1}{K} \sum_{i \in \mathcal{A}} I(y^{(i)} = j)$$

$$d_2 (I_1, I_2) = \sqrt{\sum_{p} \left( I^p_1 - I^p_2 \right)^2}$$

```python
import numpy as np

class NearestNeighbor(object):
  def __init__(self):
    pass

  def train(self, X, y):
    """ X is N x D where each row is an example. Y is 1-dimension of size N """
    # the nearest neighbor classifier simply remembers all the training data
    self.Xtr = X
    self.ytr = y

  def predict(self, X):
    """ X is N x D where each row is an example we wish to predict label for """
    num_test = X.shape[0]
    # lets make sure that the output type matches the input type
    Ypred = np.zeros(num_test, dtype = self.ytr.dtype)

    # loop over all test rows
    for i in range(num_test):
      # find the nearest training image to the i'th test image
      # using the L1 distance (sum of absolute value differences)
      distances = np.sum(np.abs(self.Xtr - X[i,:]), axis = 1)
      min_index = np.argmin(distances) # get the index with smallest distance
      Ypred[i] = self.ytr[min_index] # predict the label of the nearest example

    return Ypred
```



<a name="definition"></a>
#### What is KNN?
